@using System.Linq.Expressions
@inherits InputBase<int>

<div class="input-group">
    @if (!string.IsNullOrWhiteSpace(Label))
    {
        <label class="label" for="@Id">@Label</label>
    }
    <InputNumber type="text" class="input" id="@Id" placeholder="@Placeholder" @bind-Value=CurrentValue></InputNumber>
    <ValidationMessage For="ValidationFor"></ValidationMessage>
</div>
@code {
    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public string Placeholder { get; set; }

    [Parameter]
    public Expression<Func<int>> ValidationFor { get; set; }

    protected override bool TryParseValueFromString(string? value, out int result, out string? validationErrorMessage)
    {
        result = int.Parse(value);
        validationErrorMessage = null;
        return true;
    }

}
